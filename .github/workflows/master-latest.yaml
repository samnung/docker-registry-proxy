name: master-latest

on:
  push:
    branches: [ master ]

jobs:
  multiarch-to-dockerhub-latest:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # We use buildx instead of regular build so we can take advantage of Docker layer cache via GithubActions' cache
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Setup the Github Actions cache.
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildxarch-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildxarch-

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # github username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # github actions builtin token. repo has to have pkg access.

      # the arm64 is of course much slower due to qemu, so build and push amd64 **first**
      # due to the way manifests work, the gap between this and the complete push below
      #  could result in pull failures or inconsistencies for arm64, such is life.
      # further duplicated by building both release and debug builds
      - name: Build and push amd64 Release Docker Image to DockerHub/GitHub CR
        uses: docker/build-push-action@v2
        with:
          build-args: |
            DEBUG_BUILD=0
            BASE_IMAGE_SUFFIX=
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: samnung/docker-registry-proxy:latest,ghcr.io/samnung/docker-registry-proxy:latest
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache/release
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/release

      - name: Build and push amd64 Debug Docker Image to DockerHub/GitHub CR
        uses: docker/build-push-action@v2
        with:
          build-args: |
            DEBUG_BUILD=1
            BASE_IMAGE_SUFFIX=-debug
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: samnung/docker-registry-proxy:latest-debug,ghcr.io/samnung/docker-registry-proxy:latest-debug
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache/debug
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache/debug
